<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2020/10/20/%E5%B9%B6%E6%9F%A5%E9%9B%86+%E5%85%8B%E9%B2%81%E6%96%AF%E5%8D%A1%E5%B0%94+%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E6%9D%BF%E5%AD%90/"/>
    <url>/2020/10/20/%E5%B9%B6%E6%9F%A5%E9%9B%86+%E5%85%8B%E9%B2%81%E6%96%AF%E5%8D%A1%E5%B0%94+%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E6%9D%BF%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;ext/rope&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mem(a,b) memset(a,b,sizeof(a));</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ll long long int</span><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">0x3f3f3f3f</span>;<span class="hljs-keyword">int</span> pre[<span class="hljs-number">5005</span>];<span class="hljs-keyword">int</span> n,m;<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node1</span></span><span class="hljs-class">&#123;</span>    <span class="hljs-keyword">int</span> x,y,w;&#125;node[<span class="hljs-number">200020</span>];<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;++i)        pre[i]=i;&#125;<span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(node1 x,node1 y)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">return</span> x.w&lt;y.w;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> son)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">int</span> deson,dad;    deson=son;   <span class="hljs-keyword">while</span>(son!=pre[son])        son=pre[son];    <span class="hljs-keyword">while</span>(deson!=pre[deson])    &#123;        dad=pre[deson];        pre[deson]=son;        deson=dad;    &#125;    <span class="hljs-keyword">return</span> son;&#125;<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">kruskal</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    sort(node,node+m,cmp);    <span class="hljs-keyword">int</span> sum=<span class="hljs-number">0</span>,js=<span class="hljs-number">0</span>,dad1,dad2;    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;m;++i)    &#123;        dad1=Find(node[i].x);        dad2=Find(node[i].y);        <span class="hljs-keyword">if</span>(dad1!=dad2)        &#123;            sum+=node[i].w;            pre[dad1]=dad2;            ++js;            <span class="hljs-keyword">if</span>(js==n<span class="hljs-number">-1</span>)                <span class="hljs-keyword">break</span>;        &#125;    &#125;    <span class="hljs-keyword">if</span>(js==n<span class="hljs-number">-1</span>)        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,sum);    <span class="hljs-keyword">else</span>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;orz\n&quot;</span>);&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);    init();    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;m;++i)    &#123;        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;node[i].x,&amp;node[i].y,&amp;node[i].w);    &#125;    kruskal();    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一篇博客吧</title>
    <link href="/2020/10/17/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%90%A7/"/>
    <url>/2020/10/17/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%90%A7/</url>
    
    <content type="html"><![CDATA[<p>第一篇博客，没想好写点什么，随便写写吧。<br>    大一整年都在摸鱼，摸了一年的鱼，其实在大一下就该好好开始训练学习了。可我还在玩，所以比别人差了许多。现在大二开学了，可能是该放弃一些东西的时候了吧，像游戏什么的，该减少一些了，其实我现在也玩的不多0.0，平时白天都上一天课，没课就来实验室，每天都在忙不知道忙的什么，就离谱。<br>    大二我不能像大一那么松懈，该学习算法学习算法，而且英语、线代等等也不能落下，感觉时间过得挺快的0.0.<br>    其实也就没什么好说的，就说这些吧，我去学会线代11111.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/10/12/hello-world/"/>
    <url>/2020/10/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
